/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ModuloInterfazUsuario;

import static ModuloInterfazUsuario.Dashboard.ShowJPanel;
import ModuloInterfazUsuario.table.TableHeaderAlignment;
import ModuloInterfazUsuario.table.checkBoxTableHeaderRenderer;
import com.formdev.flatlaf.FlatClientProperties;
import com.formdev.flatlaf.extras.FlatSVGIcon;
import java.awt.Component;
import java.awt.Dimension;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;


/**
 *
 * @author nath_
 */
public class validarBoleto extends javax.swing.JPanel {

    /**
     * Creates new form validarBoleto
     */
    public validarBoleto() {
        initComponents();
        setPreferredSize(new Dimension(1510,820));
        init();
    }

    public void init(){
        
        
        txtSearch.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "Ingrese el nombre del pasajero");
        txtSearch.putClientProperty(FlatClientProperties.TEXT_FIELD_LEADING_ICON, new FlatSVGIcon("Imagenes/search.svg"));
        
        table.getColumnModel().getColumn(0).setHeaderRenderer(new checkBoxTableHeaderRenderer(table, 0));
        table.getTableHeader().setDefaultRenderer(new TableHeaderAlignment(table));
       
        testData();
       
    }
    
    private void testData(){
        DefaultTableModel model = (DefaultTableModel)table.getModel();

        model.addRow(new Object[] {false, 1, "Nathalia Rojas", 1, "p8", "4/02/25", "10:30", "08:10"});
        model.addRow(new Object[] {false, 2, "Carlos Mendez", 2, "p5", "4/02/25", "10:30", "08:10"});
        model.addRow(new Object[] {false, 1, "Nathalia Rojas", 1, "p8", "4/02/25", "10:30", "08:10"});
        model.addRow(new Object[] {false, 1, "Nathalia Rojas", 1, "p8", "4/02/25", "10:30", "08:10"});
        model.addRow(new Object[] {false, 1, "Nathalia Rojas", 1, "p8", "4/02/25", "10:30", "08:10"});
        model.addRow(new Object[] {false, 1, "Nathalia Rojas", 1, "p8", "4/02/25", "10:30", "08:10"});
        model.addRow(new Object[] {false, 1, "Nathalia Rojas", 1, "p8", "4/02/25", "10:30", "08:10"});
        model.addRow(new Object[] {false, 1, "Nathalia Rojas", 1, "p8", "4/02/25", "10:30", "08:10"});
        model.addRow(new Object[] {false, 1, "Nathalia Rojas", 1, "p8", "4/02/25", "10:30", "08:10"});
        model.addRow(new Object[] {false, 1, "Nathalia Rojas", 1, "p8", "4/02/25", "10:30", "08:10"});
        model.addRow(new Object[] {false, 1, "Nathalia Rojas", 1, "p8", "4/02/25", "10:30", "08:10"});
        model.addRow(new Object[] {false, 1, "Nathalia Rojas", 1, "p8", "4/02/25", "10:30", "08:10"});
        model.addRow(new Object[] {false, 1, "Nathalia Rojas", 1, "p8", "4/02/25", "10:30", "08:10"});
        model.addRow(new Object[] {false, 1, "Nathalia Rojas", 1, "p8", "4/02/25", "10:30", "08:10"});
        model.addRow(new Object[] {false, 1, "Nathalia Rojas", 1, "p8", "4/02/25", "10:30", "08:10"});
        model.addRow(new Object[] {false, 1, "Nathalia Rojas", 1, "p8", "4/02/25", "10:30", "08:10"});
        model.addRow(new Object[] {false, 1, "Nathalia Rojas", 1, "p8", "4/02/25", "10:30", "08:10"});
        model.addRow(new Object[] {false, 1, "Nathalia Rojas", 1, "p8", "4/02/25", "10:30", "08:10"});
        model.addRow(new Object[] {false, 1, "Nathalia Rojas", 1, "p8", "4/02/25", "10:30", "08:10"});
        model.addRow(new Object[] {false, 1, "Nathalia Rojas", 1, "p8", "4/02/25", "10:30", "08:10"});
        model.addRow(new Object[] {false, 1, "Nathalia Rojas", 1, "p8", "4/02/25", "10:30", "08:10"});
        model.addRow(new Object[] {false, 1, "Nathalia Rojas", 1, "p8", "4/02/25", "10:30", "08:10"});
        model.addRow(new Object[] {false, 1, "Nathalia Rojas", 1, "p8", "4/02/25", "10:30", "08:10"});
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel10 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        scroll = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        btnBuscar = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setFont(new java.awt.Font("Roboto ExtraBold", 1, 48)); // NOI18N
        jLabel10.setText("Boletos");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 78, -1, -1));

        txtSearch.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        add(txtSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 172, 1226, 59));

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SELECT", "ID", "PASAJERO", "TREN", "RUTA", "FECHA PARTIDA", "HORA PARTIDA", "HORA LLEGADA"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.getTableHeader().setReorderingAllowed(false);
        scroll.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setMaxWidth(50);
            table.getColumnModel().getColumn(1).setMaxWidth(60);
            table.getColumnModel().getColumn(2).setPreferredWidth(60);
            table.getColumnModel().getColumn(3).setMaxWidth(50);
            table.getColumnModel().getColumn(4).setPreferredWidth(60);
            table.getColumnModel().getColumn(5).setMaxWidth(100);
            table.getColumnModel().getColumn(6).setMaxWidth(100);
            table.getColumnModel().getColumn(7).setMaxWidth(100);
        }

        add(scroll, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 250, 1400, -1));

        btnBuscar.setBackground(new java.awt.Color(0, 0, 0));
        btnBuscar.setFont(new java.awt.Font("Roboto ExtraBold", 1, 24)); // NOI18N
        btnBuscar.setForeground(new java.awt.Color(255, 255, 255));
        btnBuscar.setText("Buscar");
        add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1309, 172, 139, 59));
    }// </editor-fold>//GEN-END:initComponents

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JScrollPane scroll;
    private javax.swing.JTable table;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
